---
- name: Provision Web Application Infrastructure on AWS
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    region: us-east-1
    key_name: mykey                   # Your EC2 key pair name
    ec2_instance_type: t2.micro
    ec2_ami: ami-0dba2cb6798deb6d8      # Example AMI for Ubuntu Server 20.04 LTS (replace as needed)
    db_instance_identifier: mydb
    db_instance_class: db.t2.micro
    db_engine: mysql
    db_allocated_storage: 20          # Size in GB
    db_username: admin
    db_password: YourPasswordHere     # Replace with a secure password
  tasks:

    - name: Create security group for EC2 instance
      amazon.aws.ec2_group:
        name: webserver-sg
        description: Security group for web server allowing HTTP and SSH
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
      register: ec2_sg

    - name: Launch EC2 instance for web server
      amazon.aws.ec2:
        key_name: "{{ key_name }}"
        instance_type: "{{ ec2_instance_type }}"
        image: "{{ ec2_ami }}"
        region: "{{ region }}"
        wait: yes
        group_id: "{{ ec2_sg.group_id }}"
        count: 1
      register: ec2_instance

    - name: Create security group for RDS instance
      amazon.aws.ec2_group:
        name: rds-sg
        description: Security group for RDS MySQL allowing access from EC2
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 3306
            to_port: 3306
            group_id: "{{ ec2_sg.group_id }}"
      register: rds_sg

    - name: Provision MySQL RDS instance
      amazon.aws.rds_instance:
        db_instance_identifier: "{{ db_instance_identifier }}"
        allocated_storage: "{{ db_allocated_storage }}"
        engine: "{{ db_engine }}"
        db_instance_class: "{{ db_instance_class }}"
        master_username: "{{ db_username }}"
        master_user_password: "{{ db_password }}"
        vpc_security_group_ids:
          - "{{ rds_sg.group_id }}"
        region: "{{ region }}"
        state: present
        wait: yes
